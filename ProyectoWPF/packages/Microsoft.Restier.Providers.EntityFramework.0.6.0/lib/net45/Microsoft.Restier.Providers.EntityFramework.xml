<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Restier.Providers.EntityFramework</name>
    </assembly>
    <members>
        <member name="M:System.Linq.Expressions.ExpressionHelpers.GetCountableQuery``1(System.Linq.IQueryable{``0})">
            <summary>
            Get count IQueryable of the elements with $skip/$top ignored
            </summary>
            <typeparam name="TElement">The type parameter for IQueryable</typeparam>
            <param name="query">The input query.</param>
            <returns>The count IQueryable</returns>
        </member>
        <member name="M:System.Linq.Expressions.ExpressionHelpers.CreateEmptyQueryable(System.Type)">
            <summary>
            Create am empty Queryable of specified type
            </summary>
            <param name="elementType">The element type of IQueryable</param>
            <returns>The empty IQueryable</returns>
        </member>
        <member name="M:System.TypeExtensions.FindGenericType(System.Type,System.Type)">
            <summary>
            Find a base type or implemented interface which has a generic definition
            represented by the parameter, <c>definition</c>.
            </summary>
            <param name="type">
            The subject type.
            </param>
            <param name="definition">
            The generic definition to check with.
            </param>
            <returns>
            The base type or the interface found; otherwise, <c>null</c>.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Shared.SharedResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Shared.SharedResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Shared.SharedResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Shared.SharedResources.QueryShouldGetSingleRecord">
            <summary>
              Looks up a localized string similar to A query for a single entity resulted in more than one record..
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.EntityFrameworkApi`1">
            <summary>
            Represents an API over a DbContext.
            </summary>
            <typeparam name="T">The DbContext type.</typeparam>
            <remarks>
            <para>
            This class tries to instantiate <typeparamref name="T"/> with the best matched constructor
            base on services configured. Descendants could override by registering <typeparamref name="T"/>
            as a scoped service. But in this case, proxy creation must be disabled in the constructors of
            <typeparamref name="T"/> under Entity Framework 6.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.EntityFrameworkApi`1.ConfigureApi(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the API services for this API. Descendants may override this method to register
            <typeparamref name="T"/> as a scoped service.
            </summary>
            <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> with which to create an <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/>.
            </param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </returns>
        </member>
        <member name="P:Microsoft.Restier.Providers.EntityFramework.EntityFrameworkApi`1.DbContext">
            <summary>
            Gets the underlying DbContext for this API.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.ModelMapper">
            <summary>
            Represents a model mapper based on a DbContext.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.ModelMapper.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Providers.EntityFramework.ModelMapper"/> class.
            </summary>
            <param name="dbContextType">
            The type of a DbContext class.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.ModelMapper.TryGetRelevantType(Microsoft.Restier.Core.ApiContext,System.String,System.Type@)">
            <summary>
            Tries to get the relevant type of an entity
            set, singleton, or composable function import.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="name">
            The name of an entity set, singleton or composable function import.
            </param>
            <param name="relevantType">
            When this method returns, provides the
            relevant type of the queryable source.
            </param>
            <returns>
            <c>true</c> if the relevant type was
            provided; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.ModelMapper.TryGetRelevantType(Microsoft.Restier.Core.ApiContext,System.String,System.String,System.Type@)">
            <summary>
            Tries to get the relevant type of a composable function.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="namespaceName">
            The name of a namespace containing a composable function.
            </param>
            <param name="name">
            The name of composable function.
            </param>
            <param name="relevantType">
            When this method returns, provides the
            relevant type of the composable function.
            </param>
            <returns>
            <c>true</c> if the relevant type was
            provided; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.ModelProducer">
            <summary>
            Represents a model producer that uses the
            metadata workspace accessible from a DbContext.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.ModelProducer.GetModelAsync(Microsoft.Restier.Core.Model.ModelContext,System.Threading.CancellationToken)">
            <summary>
            This class will not real build a model, but only get entity set name and entity map from data source
            Then pass the information to publisher layer to build the model.
            </summary>
            <param name="context">
            The context for processing
            </param>
            <param name="cancellationToken">
            An optional cancellation token.
            </param>
            <returns>
            Always a null model.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.QueryExecutor">
            <summary>
            Represents a query executor that uses Entity Framework methods.
            This class only executes queries against EF provider, it'll
            delegate other queries to inner IQueryExecutor.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.QueryExecutor.ExecuteQueryAsync``1(Microsoft.Restier.Core.Query.QueryContext,System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes a query and produces a query result.
            </summary>
            <typeparam name="TElement">
            The type of the elements in the query.
            </typeparam>
            <param name="context">
            The query context.
            </param>
            <param name="query">
            A composed query.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a query result.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.QueryExecutor.ExecuteExpressionAsync``1(Microsoft.Restier.Core.Query.QueryContext,System.Linq.IQueryProvider,System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes a singleton
            query and produces a query result.
            </summary>
            <typeparam name="TResult">
            The type of the singleton query result.
            </typeparam>
            <param name="context">
            The query context.
            </param>
            <param name="queryProvider">
            A query provider to execute expression.
            </param>
            <param name="expression">
            An expression to be composed on the base query.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a query result.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.QueryExpressionProcessor">
            <summary>
            A query expression filter to handle EF related logic.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.QueryExpressionProcessor.Process(Microsoft.Restier.Core.Query.QueryExpressionContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.QueryExpressionSourcer">
            <summary>
            Represents a query expression sourcer that uses a DbContext.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.QueryExpressionSourcer.ReplaceQueryableSource(Microsoft.Restier.Core.Query.QueryExpressionContext,System.Boolean)">
            <summary>
            Sources an expression.
            </summary>
            <param name="context">
            The query expression context.
            </param>
            <param name="embedded">
            Indicates if the sourcing is occurring on an embedded node.
            </param>
            <returns>
            A data source expression that represents the visited node.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Providers.EntityFramework.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Providers.EntityFramework.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Providers.EntityFramework.Resources.DataModificationMustBeCUD">
            <summary>
              Looks up a localized string similar to A DataModificationEntry must be either New, Update or Delete..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Providers.EntityFramework.Resources.InvalidLineStringGeographyType">
            <summary>
              Looks up a localized string similar to Need &apos;LineString type&apos;, while input is {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Providers.EntityFramework.Resources.InvalidPointGeographyType">
            <summary>
              Looks up a localized string similar to Need &apos;Point type&apos;, while input is {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Providers.EntityFramework.Resources.PreconditionCheckFailed">
            <summary>
              Looks up a localized string similar to The precondition check for request {0} on resource {1} is failed..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Providers.EntityFramework.Resources.ResourceNotFound">
            <summary>
              Looks up a localized string similar to Could not find the specified resource..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Providers.EntityFramework.Resources.UnsupportedPropertyType">
            <summary>
              Looks up a localized string similar to Unsupported type for property: {0}..
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.ServiceCollectionExtensions">
            <summary>
            Contains extension methods of <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.ServiceCollectionExtensions.AddEfProviderServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method is used to add entity framework providers service into container.
            </summary>
            <typeparam name="TDbContext">The DbContext type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>Current <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.GeographyConverter">
            <summary>
            The class defined conversion between GeographyPoint and DbGeography,
            and between GeographyLineString and DbGeography.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.GeographyConverter.ToGeographyPoint(System.Data.Entity.Spatial.DbGeography)">
            <summary>
            Convert a DbGeography to Edm GeographyPoint
            </summary>
            <param name="geography"> The DbGeography to be converted</param>
            <returns>A Edm GeographyPoint</returns>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.GeographyConverter.ToDbGeography(Microsoft.Spatial.GeographyPoint)">
            <summary>
            Convert a Edm GeographyPoint to DbGeography
            </summary>
            <param name="point">The Edm GeographyPoint to be converted</param>
            <returns>A DbGeography</returns>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.GeographyConverter.ToGeographyLineString(System.Data.Entity.Spatial.DbGeography)">
            <summary>
            Convert a DbGeography to Edm GeographyPoint
            </summary>
            <param name="geography"> The DbGeography to be converted</param>
            <returns>A Edm GeographyLineString</returns>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.GeographyConverter.ToDbGeography(Microsoft.Spatial.GeographyLineString)">
            <summary>
            Convert a Edm GeographyLineString to DbGeography
            </summary>
            <param name="lineString">The Edm GeographyLineString to be converted</param>
            <returns>A DbGeography</returns>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.ChangeSetInitializer">
            <summary>
            To prepare changed entries for the given <see cref="T:Microsoft.Restier.Core.Submit.ChangeSet"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.ChangeSetInitializer.InitializeAsync(Microsoft.Restier.Core.Submit.SubmitContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously prepare the <see cref="T:Microsoft.Restier.Core.Submit.ChangeSet"/>.
            </summary>
            <param name="context">The submit context class used for preparation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task object that represents this asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.ChangeSetInitializer.ConvertToEfValue(System.Type,System.Object)">
            <summary>
            Convert a Edm type value to Resource Framework supported value type
            </summary>
            <param name="type">The type of the property defined in CLR class</param>
            <param name="value">The value from OData deserializer and in type of Edm</param>
            <returns>The converted value object</returns>
        </member>
        <member name="T:Microsoft.Restier.Providers.EntityFramework.SubmitExecutor">
            <summary>
            To execute submission of changes to database.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Providers.EntityFramework.SubmitExecutor.ExecuteSubmitAsync(Microsoft.Restier.Core.Submit.SubmitContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the submission.
            </summary>
            <param name="context">The submit context class used for preparation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The task object that represents this asynchronous operation.</returns>
        </member>
    </members>
</doc>
