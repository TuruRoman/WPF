<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Restier.Core</name>
    </assembly>
    <members>
        <member name="M:System.Linq.Expressions.ExpressionHelpers.GetCountableQuery``1(System.Linq.IQueryable{``0})">
            <summary>
            Get count IQueryable of the elements with $skip/$top ignored
            </summary>
            <typeparam name="TElement">The type parameter for IQueryable</typeparam>
            <param name="query">The input query.</param>
            <returns>The count IQueryable</returns>
        </member>
        <member name="M:System.Linq.Expressions.ExpressionHelpers.CreateEmptyQueryable(System.Type)">
            <summary>
            Create am empty Queryable of specified type
            </summary>
            <param name="elementType">The element type of IQueryable</param>
            <returns>The empty IQueryable</returns>
        </member>
        <member name="M:System.TypeExtensions.FindGenericType(System.Type,System.Type)">
            <summary>
            Find a base type or implemented interface which has a generic definition
            represented by the parameter, <c>definition</c>.
            </summary>
            <param name="type">
            The subject type.
            </param>
            <param name="definition">
            The generic definition to check with.
            </param>
            <returns>
            The base type or the interface found; otherwise, <c>null</c>.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Shared.SharedResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Shared.SharedResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Shared.SharedResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Shared.SharedResources.QueryShouldGetSingleRecord">
            <summary>
              Looks up a localized string similar to A query for a single entity resulted in more than one record..
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.ApiConfiguratorAttributes">
            <summary>
            Specifies a set of methods that can initialize, configure, add service, dispose for all attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguratorAttributes.AddApiServices(System.Type,Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Applies configuration from any API configurator attributes
            specified on an API type to an API services.
            </summary>
            <param name="type">
            An API type.
            </param>
            <param name="services">
            The API services registration.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguratorAttributes.ApplyConfiguration(System.Type,Microsoft.Restier.Core.ApiConfiguration)">
            <summary>
            Applies configuration from any API configurator attributes
            specified on an API type to an API configuration.
            </summary>
            <param name="type">
            An API type.
            </param>
            <param name="configuration">
            An API configuration.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguratorAttributes.ApplyInitialization(System.Type,System.Object,Microsoft.Restier.Core.ApiContext)">
            <summary>
            Applies initialization routines from any API configurator
            attributes specified on an API type to an API context.
            </summary>
            <param name="type">
            An API type.
            </param>
            <param name="instance">
            An API instance, if applicable.
            </param>
            <param name="context">
            An API context.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguratorAttributes.ApplyDisposal(System.Type,System.Object,Microsoft.Restier.Core.ApiContext)">
            <summary>
            Applies disposal routines from any API configurator
            attributes specified on an API type to an API context.
            </summary>
            <param name="type">
            An API type.
            </param>
            <param name="instance">
            An API instance, if applicable.
            </param>
            <param name="context">
            An API context.
            </param>
        </member>
        <member name="T:Microsoft.Restier.Core.ConventionBasedOperationFilter">
            <summary>
            A convention-based change set item filter.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Operation.IOperationFilter">
            <summary>
            Represents a operation processor.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Operation.IOperationFilter.OnOperationExecutingAsync(Microsoft.Restier.Core.Operation.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously applies logic before a operation is executed.
            </summary>
            <param name="context">
            The operation context.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.Operation.IOperationFilter.OnOperationExecutedAsync(Microsoft.Restier.Core.Operation.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously applies logic after an operation is executed.
            </summary>
            <param name="context">
            The submit context.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedOperationFilter.ApplyTo(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedOperationFilter.OnOperationExecutingAsync(Microsoft.Restier.Core.Operation.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedOperationFilter.OnOperationExecutedAsync(Microsoft.Restier.Core.Operation.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Restier.Core.ConventionBasedOperationAuthorizer">
            <summary>
            A convention-based operation authorizer.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Operation.IOperationAuthorizer">
            <summary>
            Represents a operation authorizer.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Operation.IOperationAuthorizer.AuthorizeAsync(Microsoft.Restier.Core.Operation.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously authorizes the Operation.
            </summary>
            <param name="context">
            The operation context.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedOperationAuthorizer.AuthorizeAsync(Microsoft.Restier.Core.Operation.OperationContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Restier.Core.ConventionBasedChangeSetItemAuthorizer">
            <summary>
            A convention-based change set item authorizer.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.IChangeSetItemAuthorizer">
            <summary>
            Represents a change set item authorizer.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.IChangeSetItemAuthorizer.AuthorizeAsync(Microsoft.Restier.Core.Submit.SubmitContext,Microsoft.Restier.Core.Submit.ChangeSetItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously authorizes the ChangeSetItem.
            </summary>
            <param name="context">
            The submit context.
            </param>
            <param name="item">
            A change set item to be authorized.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedChangeSetItemAuthorizer.ApplyTo(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedChangeSetItemAuthorizer.AuthorizeAsync(Microsoft.Restier.Core.Submit.SubmitContext,Microsoft.Restier.Core.Submit.ChangeSetItem,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Restier.Core.ConventionBasedChangeSetItemFilter">
            <summary>
            A convention-based change set item processor which calls logic like OnInserting and OnInserted.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.IChangeSetItemFilter">
            <summary>
            Represents a change set item filter to have logic before and after change set item processed.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.IChangeSetItemFilter.OnChangeSetItemProcessingAsync(Microsoft.Restier.Core.Submit.SubmitContext,Microsoft.Restier.Core.Submit.ChangeSetItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously applies logic before a change set item is processed.
            </summary>
            <param name="context">
            The submit context.
            </param>
            <param name="item">
            A change set item.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.IChangeSetItemFilter.OnChangeSetItemProcessedAsync(Microsoft.Restier.Core.Submit.SubmitContext,Microsoft.Restier.Core.Submit.ChangeSetItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously applies logic after a change set item is processed.
            </summary>
            <param name="context">
            The submit context.
            </param>
            <param name="item">
            A change set item.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedChangeSetItemFilter.ApplyTo(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedChangeSetItemFilter.OnChangeSetItemProcessingAsync(Microsoft.Restier.Core.Submit.SubmitContext,Microsoft.Restier.Core.Submit.ChangeSetItem,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedChangeSetItemFilter.OnChangeSetItemProcessedAsync(Microsoft.Restier.Core.Submit.SubmitContext,Microsoft.Restier.Core.Submit.ChangeSetItem,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Restier.Core.ConventionBasedChangeSetItemValidator">
            <summary>
            A convention-based change set item validator.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.IChangeSetItemValidator">
            <summary>
            Represents a change set entry validator.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.IChangeSetItemValidator.ValidateChangeSetItemAsync(Microsoft.Restier.Core.Submit.SubmitContext,Microsoft.Restier.Core.Submit.ChangeSetItem,System.Collections.ObjectModel.Collection{Microsoft.Restier.Core.Submit.ChangeSetItemValidationResult},System.Threading.CancellationToken)">
            <summary>
            Asynchronously validates a change set item.
            </summary>
            <param name="context">
            The submit context.
            </param>
            <param name="item">
            The change set item to validate.
            </param>
            <param name="validationResults">
            A set of validation results.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedChangeSetItemValidator.ValidateChangeSetItemAsync(Microsoft.Restier.Core.Submit.SubmitContext,Microsoft.Restier.Core.Submit.ChangeSetItem,System.Collections.ObjectModel.Collection{Microsoft.Restier.Core.Submit.ChangeSetItemValidationResult},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Restier.Core.ConventionBasedQueryExpressionProcessor">
            <summary>
            A convention-based query expression processor which will apply OnFilter logic into query expression.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.IQueryExpressionProcessor">
            <summary>
            Represents a service that processes a query expression.
            </summary>
            <remarks>
            <para>
            Query expression processing converts an expression node into a
            different expression node according to API logic such as a
            restricting filter on top of some composable API data.
            </para>
            <para>
            Processing is the third step that occurs when visiting a query
            expression after its children have been visited, so it occurs during
            upward traversal of the query expression and after inspection and
            expansion. Since processing fundamentally alters the query expression,
            the resulting expression is recursively processed to ensure that all
            appropriate normalization, inspection, expansion, processing and
            sourcing occurs.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.IQueryExpressionProcessor.Process(Microsoft.Restier.Core.Query.QueryExpressionContext)">
            <summary>
            Processes an expression.
            </summary>
            <param name="context">
            The query expression context.
            </param>
            <returns>
            A processed expression of the same type as the visited node, or
            if processing did not apply, the visited node.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedQueryExpressionProcessor.ApplyTo(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Restier.Core.ConventionBasedQueryExpressionProcessor.Process(Microsoft.Restier.Core.Query.QueryExpressionContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Restier.Core.ApiBaseExtensions">
            <summary>
            Represents the API engine and provides a set of static
            (Shared in Visual Basic) methods for interacting with objects
            that implement <see cref="T:Microsoft.Restier.Core.ApiBase"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBaseExtensions.GetModelAsync(Microsoft.Restier.Core.ApiBase,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets an API model for an API.
            </summary>
            <param name="api">
            An API.
            </param>
            <param name="cancellationToken">
            An optional cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is the API model.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBaseExtensions.GetQueryableSource(Microsoft.Restier.Core.ApiBase,System.String,System.Object[])">
            <summary>
            Gets a queryable source of data exposed by an API.
            </summary>
            <param name="api">
            An API.
            </param>
            <param name="name">
            The name of an entity set, singleton or composable function import.
            </param>
            <param name="arguments">
            If <paramref name="name"/> is a composable function import,
            the arguments to be passed to the composable function import.
            </param>
            <returns>
            A queryable source.
            </returns>
            <remarks>
            <para>
            If the name identifies a singleton or a composable function import
            whose result is a singleton, the resulting queryable source will
            be configured such that it represents exactly zero or one result.
            </para>
            <para>
            Note that the resulting queryable source cannot be synchronously
            enumerated as the API engine only operates asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBaseExtensions.GetQueryableSource(Microsoft.Restier.Core.ApiBase,System.String,System.String,System.Object[])">
            <summary>
            Gets a queryable source of data exposed by an API.
            </summary>
            <param name="api">
            An API.
            </param>
            <param name="namespaceName">
            The name of a namespace containing a composable function.
            </param>
            <param name="name">
            The name of a composable function.
            </param>
            <param name="arguments">
            The arguments to be passed to the composable function.
            </param>
            <returns>
            A queryable source.
            </returns>
            <remarks>
            <para>
            If the name identifies a composable function whose result is a
            singleton, the resulting queryable source will be configured such
            that it represents exactly zero or one result.
            </para>
            <para>
            Note that the resulting queryable source cannot be synchronously
            enumerated, as the API engine only operates asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBaseExtensions.GetQueryableSource``1(Microsoft.Restier.Core.ApiBase,System.String,System.Object[])">
            <summary>
            Gets a queryable source of data exposed by an API.
            </summary>
            <typeparam name="TElement">
            The type of the elements in the queryable source.
            </typeparam>
            <param name="api">
            An API.
            </param>
            <param name="name">
            The name of an entity set, singleton or composable function import.
            </param>
            <param name="arguments">
            If <paramref name="name"/> is a composable function import,
            the arguments to be passed to the composable function import.
            </param>
            <returns>
            A queryable source.
            </returns>
            <remarks>
            <para>
            If the name identifies a singleton or a composable function import
            whose result is a singleton, the resulting queryable source will
            be configured such that it represents exactly zero or one result.
            </para>
            <para>
            Note that the resulting queryable source cannot be synchronously
            enumerated, as the API engine only operates asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBaseExtensions.GetQueryableSource``1(Microsoft.Restier.Core.ApiBase,System.String,System.String,System.Object[])">
            <summary>
            Gets a queryable source of data exposed by an API.
            </summary>
            <typeparam name="TElement">
            The type of the elements in the queryable source.
            </typeparam>
            <param name="api">
            An API.
            </param>
            <param name="namespaceName">
            The name of a namespace containing a composable function.
            </param>
            <param name="name">
            The name of a composable function.
            </param>
            <param name="arguments">
            The arguments to be passed to the composable function.
            </param>
            <returns>
            A queryable source.
            </returns>
            <remarks>
            <para>
            If the name identifies a composable function whose result is a
            singleton, the resulting queryable source will be configured such
            that it represents exactly zero or one result.
            </para>
            <para>
            Note that the resulting queryable source cannot be synchronously
            enumerated, as the API engine only operates asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBaseExtensions.QueryAsync(Microsoft.Restier.Core.ApiBase,Microsoft.Restier.Core.Query.QueryRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously queries for data exposed by an API.
            </summary>
            <param name="api">
            An API.
            </param>
            <param name="request">
            A query request.
            </param>
            <param name="cancellationToken">
            An optional cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a query result.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBaseExtensions.SubmitAsync(Microsoft.Restier.Core.ApiBase,Microsoft.Restier.Core.Submit.ChangeSet,System.Threading.CancellationToken)">
            <summary>
            Asynchronously submits changes made to an API.
            </summary>
            <param name="api">
            An API.
            </param>
            <param name="changeSet">
            A change set, or <c>null</c> to submit existing pending changes.
            </param>
            <param name="cancellationToken">
            An optional cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a submit result.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.ApiBase">
            <summary>
            Represents a base class for an API.
            </summary>
            <remarks>
            <para>
            An API configuration is intended to be long-lived, and can be
            statically cached according to an API type specified when the
            configuration is created. Additionally, the API model produced
            as a result of a particular configuration is cached under the same
            API type to avoid re-computing it on each invocation.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBase.Dispose">
            <summary>
            Performs application-defined tasks associated with
            freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBase.ConfigureApi(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure services for this API.
            </summary>
            <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> with which to create an <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/>.
            </param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBase.CreateApiConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Creates the API configuration for this API.
            Descendants may override to use a customized DI container, or further configure the built
            <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/>.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> containing API service registrations.</param>
            <returns>
            An <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/> with which to create the API configuration for this API.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiBase.CreateApiContext(Microsoft.Restier.Core.ApiConfiguration)">
            <summary>
            Creates the API context for this API.
            Descendants may further configure the built <see cref="T:Microsoft.Restier.Core.ApiContext"/>.
            </summary>
            <param name="configuration">
            The API configuration to use.
            </param>
            <returns>
            The API context for this API.
            </returns>
        </member>
        <member name="P:Microsoft.Restier.Core.ApiBase.Context">
            <summary>
            Gets the API context for this API.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.ApiBase.IsDisposed">
            <summary>
            Gets a value indicating whether this API has been disposed.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.ApiBase.Configuration">
            <summary>
            Gets the API configuration for this API.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.ApiConfiguration">
            <summary>
            Represents a configuration that defines an API.
            </summary>
            <remarks>
            <para>
            An API configuration defines the model and behavior of an API
            through a set of registered Api services in DI container.
            </para>
            <para>
            Api services may be singletons, meaning there is at most one instance,
            or scoped, in which case there will be one instances of the services for each scope.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguration.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/> class.
            </summary>
            <param name="serviceProvider">
            An <see cref="T:System.IServiceProvider"/> containing all services of this <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/>.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguration.AddPublisherServices``1(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
            <summary>
            Adds a configuration procedure for API type <typeparamref name="TApi"/>.
            This is expected to be called by publisher like WebApi to add services.
            </summary>
            <typeparam name="TApi">The API type.</typeparam>
            <param name="configurationCallback">
            An action that will be called during the configuration of <typeparamref name="TApi"/>.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguration.GetPublisherServiceCallback(System.Type)">
            <summary>
            Get publisher registering service callback for specified Api.
            </summary>
            <param name="apiType">
            The Api type of which to get the publisher registering service callback.
            </param>
            <returns>The service registering callback.</returns>
        </member>
        <member name="P:Microsoft.Restier.Core.ApiConfiguration.ServiceProvider">
            <summary>
            Gets the <see cref="T:System.IServiceProvider"/> which contains all services of this <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.ApiConfigurationExtensions">
            <summary>
            Offers a collection of extension methods to <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfigurationExtensions.GetApiService``1(Microsoft.Restier.Core.ApiConfiguration)">
            <summary>
            Gets a service instance.
            </summary>
            <param name="configuration">
            An API configuration.
            </param>
            <typeparam name="T">The service type.</typeparam>
            <returns>The service instance.</returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfigurationExtensions.HasProperty(Microsoft.Restier.Core.ApiConfiguration,System.String)">
            <summary>
            Indicates if this object has a property.
            </summary>
            <param name="configuration">
            An API configuration.
            </param>
            <param name="name">
            The name of a property.
            </param>
            <returns>
            <c>true</c> if this object has the
            property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfigurationExtensions.GetProperty``1(Microsoft.Restier.Core.ApiConfiguration,System.String)">
            <summary>
            Gets a property.
            </summary>
            <typeparam name="T">
            The type of the property.
            </typeparam>
            <param name="configuration">
            An API configuration.
            </param>
            <param name="name">
            The name of a property.
            </param>
            <returns>
            The value of the property.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfigurationExtensions.GetProperty(Microsoft.Restier.Core.ApiConfiguration,System.String)">
            <summary>
            Gets a property.
            </summary>
            <param name="configuration">
            An API configuration.
            </param>
            <param name="name">
            The name of a property.
            </param>
            <returns>
            The value of the property.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfigurationExtensions.SetProperty(Microsoft.Restier.Core.ApiConfiguration,System.String,System.Object)">
            <summary>
            Sets a property.
            </summary>
            <param name="configuration">
            An API configuration.
            </param>
            <param name="name">
            The name of a property.
            </param>
            <param name="value">
            A value for the property.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfigurationExtensions.ClearProperty(Microsoft.Restier.Core.ApiConfiguration,System.String)">
            <summary>
            Clears a property.
            </summary>
            <param name="configuration">
            An API configuration.
            </param>
            <param name="name">
            The name of a property.
            </param>
        </member>
        <member name="T:Microsoft.Restier.Core.ApiContext">
            <summary>
            Represents context under which an API operates.
            </summary>
            <remarks>
            An API context is an instantiation of an API configuration.
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContext.#ctor(Microsoft.Restier.Core.ApiConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.ApiContext"/> class.
            </summary>
            <param name="configuration">
            An API configuration.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.ApiContext.Configuration">
            <summary>
            Gets the API configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.ApiContext.ServiceProvider">
            <summary>
            Gets the <see cref="T:System.IServiceProvider"/> which contains all services of this <see cref="T:Microsoft.Restier.Core.ApiContext"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.ApiContextExtensions">
            <summary>
            Represents the API engine and provides a set of static
            (Shared in Visual Basic) methods for interacting with objects
            that implement <see cref="T:Microsoft.Restier.Core.ApiContext"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.GetApiService``1(Microsoft.Restier.Core.ApiContext)">
            <summary>
            Gets a service instance.
            </summary>
            <param name="context">
            An API context.
            </param>
            <typeparam name="T">The service type.</typeparam>
            <returns>The service instance.</returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.GetApiServices``1(Microsoft.Restier.Core.ApiContext)">
            <summary>
            Gets all registered service instances.
            </summary>
            <param name="context">
            An API context.
            </param>
            <typeparam name="T">The service type.</typeparam>
            <returns>The ordered collection of service instances.</returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.HasProperty(Microsoft.Restier.Core.ApiContext,System.String)">
            <summary>
            Indicates if this object has a property.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="name">
            The name of a property.
            </param>
            <returns>
            <c>true</c> if this object has the
            property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.GetProperty``1(Microsoft.Restier.Core.ApiContext,System.String)">
            <summary>
            Gets a property.
            </summary>
            <typeparam name="T">
            The type of the property.
            </typeparam>
            <param name="context">
            An API context.
            </param>
            <param name="name">
            The name of a property.
            </param>
            <returns>
            The value of the property.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.GetProperty(Microsoft.Restier.Core.ApiContext,System.String)">
            <summary>
            Gets a property.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="name">
            The name of a property.
            </param>
            <returns>
            The value of the property.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.SetProperty(Microsoft.Restier.Core.ApiContext,System.String,System.Object)">
            <summary>
            Sets a property.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="name">
            The name of a property.
            </param>
            <param name="value">
            A value for the property.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.ClearProperty(Microsoft.Restier.Core.ApiContext,System.String)">
            <summary>
            Clears a property.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="name">
            The name of a property.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.GetModelAsync(Microsoft.Restier.Core.ApiContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets an API model using an API context.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="cancellationToken">
            An optional cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is the API model.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.GetQueryableSource(Microsoft.Restier.Core.ApiContext,System.String,System.Object[])">
            <summary>
            Gets a queryable source of data using an API context.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="name">
            The name of an entity set, singleton or composable function import.
            </param>
            <param name="arguments">
            If <paramref name="name"/> is a composable function import,
            the arguments to be passed to the composable function import.
            </param>
            <returns>
            A queryable source.
            </returns>
            <remarks>
            <para>
            If the name identifies a singleton or a composable function import
            whose result is a singleton, the resulting queryable source will
            be configured such that it represents exactly zero or one result.
            </para>
            <para>
            Note that the resulting queryable source cannot be synchronously
            enumerated as the API engine only operates asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.GetQueryableSource(Microsoft.Restier.Core.ApiContext,System.String,System.String,System.Object[])">
            <summary>
            Gets a queryable source of data using an API context.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="namespaceName">
            The name of a namespace containing a composable function.
            </param>
            <param name="name">
            The name of a composable function.
            </param>
            <param name="arguments">
            The arguments to be passed to the composable function.
            </param>
            <returns>
            A queryable source.
            </returns>
            <remarks>
            <para>
            If the name identifies a composable function whose result is a
            singleton, the resulting queryable source will be configured such
            that it represents exactly zero or one result.
            </para>
            <para>
            Note that the resulting queryable source cannot be synchronously
            enumerated, as the API engine only operates asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.GetQueryableSource``1(Microsoft.Restier.Core.ApiContext,System.String,System.Object[])">
            <summary>
            Gets a queryable source of data using an API context.
            </summary>
            <typeparam name="TElement">
            The type of the elements in the queryable source.
            </typeparam>
            <param name="context">
            An API context.
            </param>
            <param name="name">
            The name of an entity set, singleton or composable function import.
            </param>
            <param name="arguments">
            If <paramref name="name"/> is a composable function import,
            the arguments to be passed to the composable function import.
            </param>
            <returns>
            A queryable source.
            </returns>
            <remarks>
            <para>
            If the name identifies a singleton or a composable function import
            whose result is a singleton, the resulting queryable source will
            be configured such that it represents exactly zero or one result.
            </para>
            <para>
            Note that the resulting queryable source cannot be synchronously
            enumerated, as the API engine only operates asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.GetQueryableSource``1(Microsoft.Restier.Core.ApiContext,System.String,System.String,System.Object[])">
            <summary>
            Gets a queryable source of data using an API context.
            </summary>
            <typeparam name="TElement">
            The type of the elements in the queryable source.
            </typeparam>
            <param name="context">
            An API context.
            </param>
            <param name="namespaceName">
            The name of a namespace containing a composable function.
            </param>
            <param name="name">
            The name of a composable function.
            </param>
            <param name="arguments">
            The arguments to be passed to the composable function.
            </param>
            <returns>
            A queryable source.
            </returns>
            <remarks>
            <para>
            If the name identifies a composable function whose result is a
            singleton, the resulting queryable source will be configured such
            that it represents exactly zero or one result.
            </para>
            <para>
            Note that the resulting queryable source cannot be synchronously
            enumerated, as the API engine only operates asynchronously.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.QueryAsync(Microsoft.Restier.Core.ApiContext,Microsoft.Restier.Core.Query.QueryRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously queries for data using an API context.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="request">
            A query request.
            </param>
            <param name="cancellationToken">
            An optional cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a query result.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiContextExtensions.SubmitAsync(Microsoft.Restier.Core.ApiContext,Microsoft.Restier.Core.Submit.ChangeSet,System.Threading.CancellationToken)">
            <summary>
            Asynchronously submits changes made using an API context.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="changeSet">
            A change set, or <c>null</c> to submit existing pending changes.
            </param>
            <param name="cancellationToken">
            An optional cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a submit result.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.DataSourceStub">
            <summary>
            Represents method stubs that identify API data source.
            </summary>
            <remarks>
            The methods in this class are stubs that identify API data source
            inside a query expression. This is a generic way to reference a
            data source in API. Later in the query pipeline the sourcer from
            the data provider will replace the stub with the actual data source.
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.DataSourceStub.GetQueryableSource``1(System.String,System.Object[])">
            <summary>
            Identifies an entity set, singleton or queryable data
            resulting from a call to a composable function import.
            </summary>
            <typeparam name="TElement">
            The type of the elements in the queryable data.
            </typeparam>
            <param name="name">
            The name of an entity set, singleton or composable function import.
            </param>
            <param name="arguments">
            If <paramref name="name"/> is a composable function import,
            the arguments to be passed to the composable function import.
            </param>
            <returns>
            A representation of the entity set, singleton or queryable
            data resulting from a call to the composable function import.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.DataSourceStub.GetQueryableSource``1(System.String,System.String,System.Object[])">
            <summary>
            Identifies queryable data resulting
            from a call to a composable function.
            </summary>
            <typeparam name="TElement">
            The type of the elements in the queryable data.
            </typeparam>
            <param name="namespaceName">
            The name of a namespace containing the composable function.
            </param>
            <param name="name">
            The name of a composable function.
            </param>
            <param name="arguments">
            The arguments to be passed to the composable function.
            </param>
            <returns>
            A representation of the queryable data resulting
            from a call to the composable function.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.DataSourceStub.GetPropertyValue``1(System.Object,System.String)">
            <summary>
            Identifies the value of an extended property of an object.
            </summary>
            <typeparam name="TResult">
            The type of the result.
            </typeparam>
            <param name="source">
            A source object.
            </param>
            <param name="propertyName">
            The name of a property.
            </param>
            <returns>
            A representation of the value of the
            extended property of the object.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.ApiConfiguratorAttribute">
            <summary>
            Specifies a set of methods that can participate in the
            configuration, initialization and disposal of an API.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguratorAttribute.AddApiServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)">
            <summary>
            Add Api services into the DI container.
            </summary>
            <param name="services">
            The Api services registration.
            </param>
            <param name="type">
            The Api type on which this attribute was placed.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguratorAttribute.UpdateApiConfiguration(Microsoft.Restier.Core.ApiConfiguration,System.Type)">
            <summary>
            Update an Api configuration after ApiConfiguration is created.
            </summary>
            <param name="configuration">
            An Api configuration.
            </param>
            <param name="type">
            The Api type on which this attribute was placed.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguratorAttribute.UpdateApiContext(Microsoft.Restier.Core.ApiContext,System.Type,System.Object)">
            <summary>
            Update an Api context after ApiContext is created.
            </summary>
            <param name="context">
            An Api context.
            </param>
            <param name="type">
            The Api type on which this attribute was placed.
            </param>
            <param name="instance">
            An Api instance, if applicable.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.ApiConfiguratorAttribute.Dispose(Microsoft.Restier.Core.ApiContext,System.Type,System.Object)">
            <summary>
            Disposes an Api context.
            </summary>
            <param name="context">
            An Api context.
            </param>
            <param name="type">
            The Api type on which this attribute was placed.
            </param>
            <param name="instance">
            An Api instance, if applicable.
            </param>
        </member>
        <member name="T:Microsoft.Restier.Core.PreconditionRequiredException">
            <summary>
            This exception is used for 428 Precondition required response.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.PreconditionRequiredException.#ctor">
            <summary>
            Initializes a new instance of the PreconditionRequiredException class.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.PreconditionRequiredException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PreconditionRequiredException class.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
        </member>
        <member name="M:Microsoft.Restier.Core.PreconditionRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PreconditionRequiredException class.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <param name="innerException">Exception that caused this exception to be thrown.</param>
        </member>
        <member name="T:Microsoft.Restier.Core.PreconditionFailedException">
            <summary>
            This exception is used for 412 Precondition Failed response.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.PreconditionFailedException.#ctor">
            <summary>
            Initializes a new instance of the PreconditionFailedException class.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.PreconditionFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PreconditionFailedException class.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
        </member>
        <member name="M:Microsoft.Restier.Core.PreconditionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PreconditionFailedException class.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <param name="innerException">Exception that caused this exception to be thrown.</param>
        </member>
        <member name="T:Microsoft.Restier.Core.ResourceNotFoundException">
            <summary>
            This exception is used for 404 Not found response.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.ResourceNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
        </member>
        <member name="M:Microsoft.Restier.Core.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ResourceNotFoundException class.
            </summary>
            <param name="message">Plain text error message for this exception.</param>
            <param name="innerException">Exception that caused this exception to be thrown.</param>
        </member>
        <member name="T:Microsoft.Restier.Core.InvocationContext">
            <summary>
            Represents context under which an request is processed.
            The request could be a query, a submit, an operation execution or a model retrieve.
            It has subclass for each kinds of request.
            </summary>
            <remarks>
            An invocation context is created each time an request is parsed to a specified request.
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.InvocationContext.#ctor(Microsoft.Restier.Core.ApiContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.InvocationContext"/> class.
            </summary>
            <param name="apiContext">
            An API context.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.InvocationContext.ApiContext">
            <summary>
            Gets the API context.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.InvocationContextExtensions">
            <summary>
            Represents the API engine and provides a set of static
            (Shared in Visual Basic) methods for interacting with objects
            that implement <see cref="T:Microsoft.Restier.Core.InvocationContext"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.InvocationContextExtensions.GetApiService``1(Microsoft.Restier.Core.InvocationContext)">
            <summary>
            Gets an API service.
            </summary>
            <param name="context">
            An invocation context.
            </param>
            <typeparam name="T">The API service type.</typeparam>
            <returns>The API service instance.</returns>
        </member>
        <member name="M:Microsoft.Restier.Core.InvocationContextExtensions.GetApiServices``1(Microsoft.Restier.Core.InvocationContext)">
            <summary>
            Gets an ordered collection of service instances.
            </summary>
            <param name="context">
            An invocation context.
            </param>
            <typeparam name="T">The API service type.</typeparam>
            <returns>The ordered collection of service instances.</returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Model.EdmHelpers">
            <summary>
            An utility class to operate with Edm model.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Model.EdmHelpers.GetTypeReference(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Get the type reference based on Edm type
            </summary>
            <param name="edmType">The edm type to retrieve Edm type reference</param>
            <returns>The edm type reference</returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Model.ModelContext">
            <summary>
            Represents context under which a model is requested.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Model.ModelContext.#ctor(Microsoft.Restier.Core.ApiContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Model.ModelContext"/> class.
            </summary>
            <param name="apiContext">
            An API context.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Model.ModelContext.ResourceSetTypeMap">
            <summary>
            Gets or sets resource set and resource type map dictionary, it will be used by publisher for model build.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Model.ModelContext.ResourceTypeKeyPropertiesMap">
            <summary>
            Gets or sets resource type and its key properties map dictionary, and used by publisher for model build.
            This is useful when key properties does not have key attribute
            or follow Web Api OData key property naming convention.
            Otherwise, this collection is not needed.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Operation.IOperationExecutor">
            <summary>
            Represents a service that executes an operation.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Operation.IOperationExecutor.ExecuteOperationAsync(System.Object,Microsoft.Restier.Core.Operation.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes an operation.
            </summary>
            <param name="instanceImplementMethod">
            A class instance with have operation implemented and will be used for reflection call.
            </param>
            <param name="context">
            The operation context.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a operation result.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Operation.OperationContext">
            <summary>
            Represents context under which a operation is executed.
            One instance created for one execution of one operation.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Operation.OperationContext.#ctor(Microsoft.Restier.Core.ApiContext,System.Func{System.String,System.Object},System.String,System.Boolean,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Operation.OperationContext"/> class.
            </summary>
            <param name="apiContext">
            An API context.
            </param>
            <param name="getParameterValueFunc">
            The function that used to retrieve the parameter value name.
            </param>
            <param name="operationName">
            The operation name.
            </param>
            <param name="isFunction">
            A flag indicates this is a function call or action call.
            </param>
            <param name="bindingParameterValue">
            A queryable for binding parameter value and if it is function/action import, the value will be null.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Operation.OperationContext.OperationName">
            <summary>
            Gets the operation name.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Operation.OperationContext.GetParameterValueFunc">
            <summary>
            Gets the function that used to retrieve the parameter value name.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Operation.OperationContext.IsFunction">
            <summary>
            Gets a value indicating whether it is a function call or action call.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Operation.OperationContext.BindingParameterValue">
            <summary>
            Gets the queryable for binding parameter value,
            and if it is function/action import, the value will be null.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Operation.OperationContext.ParameterValues">
            <summary>
            Gets or sets the parameters value array used by method,
            It is only set after parameters are prepared.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.ApiServiceContributor`1">
            <summary>
            A delegate which participate in service creation.
            All registered contributors form a chain, and the last registered will be called first.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <param name="serviceProvider">
            The <see cref="T:System.IServiceProvider"/> to which this contributor call is registered.
            </param>
            <param name="next">
            Return the result of the previous contributor on the chain.
            </param>
            <returns>A service instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Microsoft.Restier.Core.ServiceCollectionExtensions">
            <summary>
            Contains extension methods of <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.HasService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Return true if the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> has any <typeparamref name="TService"/> service
            registered.
            </summary>
            <typeparam name="TService">The API service type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>
            True if the service is registered.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.AddService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0,``0})">
            <summary>
            Adds a service contributor, which has a chance to chain previously registered service instances.
            If want to cutoff previous registration, not define a property with type of TService or do not use it.
            The first TService in function is the service of inner, and the second TService is the service returned.
            </summary>
            <typeparam name="TService">The service type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <param name="factory">
            A factory method to create a new instance of service TService, wrapping previous instance."/&gt;.
            </param>
            <returns>Current <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.AddService``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a service contributor, which has a chance to chain previously registered service instances.
            If want to cutoff previous registration, not define a property with type of TService or do not use it.
            The contributor added will get an instance of <typeparamref name="TImplement"/> from the container, i.e.
            <see cref="T:System.IServiceProvider"/>, every time it's get called.
            This method will try to register <typeparamref name="TImplement"/> as a service with
            <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient"/> life time, if it's not yet registered. To override, you can
            register <typeparamref name="TImplement"/> before or after calling this method.
            </summary>
            <remarks>
            Note: When registering <typeparamref name="TImplement"/>, you must NOT give it a
            <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceLifetime"/> that makes it outlives <typeparamref name="TService"/>, that could possibly
            make an instance of <typeparamref name="TImplement"/> be used in multiple instantiations of
            <typeparamref name="TService"/>, which leads to unpredictable behaviors.
            </remarks>
            <typeparam name="TService">The service type.</typeparam>
            <typeparam name="TImplement">The implementation type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>Current <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.MakeSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Call this to make singleton lifetime of a service.
            </summary>
            <typeparam name="TService">The service type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>Current <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.MakeScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Call this to make scoped lifetime of a service.
            </summary>
            <typeparam name="TService">The service type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>Current <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.MakeTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Call this to make transient lifetime of a service.
            </summary>
            <typeparam name="TService">The service type.</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>Current <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.AddCoreServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)">
            <summary>
            Add core services.
            </summary>
            <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> containing API service registrations.
            </param>
            <param name="apiType">
            The type of a class on which code-based conventions are used.
            </param>
            <returns>Current <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.AddAttributeServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)">
            <summary>
            Add services of enabled attributes.
            </summary>
            <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> containing API service registrations.
            </param>
            <param name="apiType">
            The type of a class on which code-based conventions are used.
            </param>
            <returns>Current <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.AddConventionBasedServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)">
            <summary>
            Enables code-based conventions for an API.
            </summary>
            <param name="services">
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> containing API service registrations.
            </param>
            <param name="apiType">
            The type of a class on which code-based conventions are used.
            </param>
            <returns>Current <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.BuildApiConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Build the <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <returns>The built <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/></returns>
        </member>
        <member name="M:Microsoft.Restier.Core.ServiceCollectionExtensions.BuildApiConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,System.IServiceProvider})">
            <summary>
            Build the <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
            <param name="serviceProviderFactory">
            An optional factory to create an <see cref="T:System.IServiceProvider"/>.
            Use this to inject your favorite DI container.
            </param>
            <returns>The built <see cref="T:Microsoft.Restier.Core.ApiConfiguration"/></returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Model.IModelBuilder">
            <summary>
            The service for model generation.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Model.IModelBuilder.GetModelAsync(Microsoft.Restier.Core.Model.ModelContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets an API model for an API.
            </summary>
            <param name="context">
            The context for processing
            </param>
            <param name="cancellationToken">
            An optional cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is the API model.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Model.IModelMapper">
            <summary>
            Represents a service that maps between
            the model space and the object space.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Model.IModelMapper.TryGetRelevantType(Microsoft.Restier.Core.ApiContext,System.String,System.Type@)">
            <summary>
            Tries to get the relevant type of an entity
            set, singleton, or composable function import.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="name">
            The name of an entity set, singleton or composable function import.
            </param>
            <param name="relevantType">
            When this method returns, provides the
            relevant type of the queryable source.
            </param>
            <returns>
            <c>true</c> if the relevant type was
            provided; otherwise, <c>false</c>.
            </returns>
            <remarks>
            <para>
            For entity sets, the relevant type is its element entity type.
            </para>
            <para>
            For singletons, the relevant type is the singleton entity type.
            </para>
            <para>
            For composable function imports, the relevant type is the return
            type if it is a primitive, complex or entity type, or the element
            type of the return type if it is a collection type.
            </para>
            <para>
            This method can return true and assign <c>null</c> as the relevant
            type when it is overriding a previously registered service and
            specifically opting to not support the specified queryable source.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.Model.IModelMapper.TryGetRelevantType(Microsoft.Restier.Core.ApiContext,System.String,System.String,System.Type@)">
            <summary>
            Tries to get the relevant type of a composable function.
            </summary>
            <param name="context">
            An API context.
            </param>
            <param name="namespaceName">
            The name of a namespace containing a composable function.
            </param>
            <param name="name">
            The name of composable function.
            </param>
            <param name="relevantType">
            When this method returns, provides the
            relevant type of the composable function.
            </param>
            <returns>
            <c>true</c> if the relevant type was
            provided; otherwise, <c>false</c>.
            </returns>
            <remarks>
            <para>
            For composable functions, the relevant type is the return
            type if it is a primitive, complex or entity type, or the
            element type of the return type if it is a collection type.
            </para>
            <para>
            This method can return true and assign <c>null</c> as the relevant
            type when it is overriding a previously registered service and
            specifically opting to not support the specified composable function.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.Restier.Core.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.CallQueryableSourceMethodNotSupported">
            <summary>
              Looks up a localized string similar to Calling the methods in &apos;QueryableSource&apos; or &apos;QueryableSource&lt;T&gt;&apos; is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.CannotSetChangeSetIfThereIsResult">
            <summary>
              Looks up a localized string similar to The change set cannot be set if there is already a result..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.CannotSetResultsSourceIfThereIsAnyError">
            <summary>
              Looks up a localized string similar to The results source cannot be set if there is any error..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.CannotSetTotalCountIfThereIsNoResult">
            <summary>
              Looks up a localized string similar to The total count cannot be set if there is no result yet..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ChangeSetPreparerMissing">
            <summary>
              Looks up a localized string similar to Change set preparer is missing..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.DataModificationMustBeCUD">
            <summary>
              Looks up a localized string similar to A DataModification must be either: IsNew, IsUpdate, or IsDelete..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.DataModificationNotSupportCreateResource">
            <summary>
              Looks up a localized string similar to &quot;DataModificationItem.ApplyTo cannot be called on an new resource..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.DataModificationRequiresResourceKey">
            <summary>
              Looks up a localized string similar to There should have been at least one predicate applied to the query from the resource key.  Ensure there is at least one resource key..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.DoNotCallDataSourceStubMethodDirectly">
            <summary>
              Looks up a localized string similar to Do not call the methods in &apos;DataSourceStub&apos; directly..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.EdmTypeNotSupported">
            <summary>
              Looks up a localized string similar to {0} is not a supported EDM type..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ElementTypeNotFound">
            <summary>
              Looks up a localized string similar to Element type cannot be found for &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ElementTypeNotMatch">
            <summary>
              Looks up a localized string similar to Element type not match..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ExpanderCannotChangeExpressionType">
            <summary>
              Looks up a localized string similar to Expander cannot change the expression type..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ExpressionMustBeQueryable">
            <summary>
              Looks up a localized string similar to Expression must be queryable..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.InspectionFailed">
            <summary>
              Looks up a localized string similar to Inspection failed..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.InvalidChangeSetEntryType">
            <summary>
              Looks up a localized string similar to Invalid ChangeSetItem Type: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ModelBuilderNotRegistered">
            <summary>
              Looks up a localized string similar to IEdmModel cannot be generated since API service IModelBuilder is not registered..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.NoPermissionToDeleteEntity">
            <summary>
              Looks up a localized string similar to The current user does not have permission to delete entities from the EntitySet &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.NoPermissionToInsertEntity">
            <summary>
              Looks up a localized string similar to The current user does not have permission to insert entities into the EntitySet &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.NoPermissionToInvokeAction">
            <summary>
              Looks up a localized string similar to The current user does not have permission to invoke the requested action &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.NoPermissionToUpdateEntity">
            <summary>
              Looks up a localized string similar to The current user does not have permission to update entities in the EntitySet &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.NotSupportedType">
            <summary>
              Looks up a localized string similar to Not supported type: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.OriginalExpressionShouldBeConstant">
            <summary>
              Looks up a localized string similar to Original query expression should be constant expression..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.OriginalExpressionShouldBeQueryable">
            <summary>
              Looks up a localized string similar to Original query expression should contain a value which is queryable..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.PreconditionCheckFailed">
            <summary>
              Looks up a localized string similar to The precondition check for request {0} on resource {1} is failed..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ProcessorCannotChangeExpressionType">
            <summary>
              Looks up a localized string similar to Processor cannot change the expression type..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.QueryableSourceCannotBeUsedAsQuery">
            <summary>
              Looks up a localized string similar to &apos;QueryableSource&apos; cannot be used as query..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.QueryExecutorMissing">
            <summary>
              Looks up a localized string similar to Query executor is missing..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.QuerySourcerMissing">
            <summary>
              Looks up a localized string similar to Query expression sourcer is missing..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ResourceNotFound">
            <summary>
              Looks up a localized string similar to The request resource is not found..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ShouldBeInterfaceType">
            <summary>
              Looks up a localized string similar to Should specify an interface type T for the handler..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.SourceExpressionMissing">
            <summary>
              Looks up a localized string similar to Expression returned by sourcer is missing..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.SubmitExecutorMissing">
            <summary>
              Looks up a localized string similar to Submit executor is missing..
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Resources.ValidationFailsTheOperation">
            <summary>
              Looks up a localized string similar to The operation cannot be performed because one or more objects are invalid.  Please inspect the ChangeSetValidationException.ValidationResults property for more information..
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.PropertyBag">
            <summary>
            Represents a bag of properties.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.PropertyBag.HasProperty(System.String)">
            <summary>
            Indicates if this object has a property.
            </summary>
            <param name="name">
            The name of a property.
            </param>
            <returns>
            <c>true</c> if this object has the
            property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.PropertyBag.GetProperty``1(System.String)">
            <summary>
            Gets a property.
            </summary>
            <typeparam name="T">
            The type of the property.
            </typeparam>
            <param name="name">
            The name of a property.
            </param>
            <returns>
            The value of the property.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.PropertyBag.GetProperty(System.String)">
            <summary>
            Gets a property.
            </summary>
            <param name="name">
            The name of a property.
            </param>
            <returns>
            The value of the property.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.PropertyBag.SetProperty(System.String,System.Object)">
            <summary>
            Sets a property.
            </summary>
            <param name="name">
            The name of a property.
            </param>
            <param name="value">
            A value for the property.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.PropertyBag.ClearProperty(System.String)">
            <summary>
            Clears a property.
            </summary>
            <param name="name">
            The name of a property.
            </param>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.DefaultQueryExecutor">
            <summary>
            Default implementation for <see cref="T:Microsoft.Restier.Core.Query.IQueryExecutor"/>
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.IQueryExecutor">
            <summary>
            Represents a service that executes a query.
            </summary>
            <remarks>
            Data provider implemented IQueryExecutor should only handle queries against the specific
            provider, and delegates all other queries to inner IQueryExecutor.
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.IQueryExecutor.ExecuteQueryAsync``1(Microsoft.Restier.Core.Query.QueryContext,System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes a query and produces a query result.
            </summary>
            <typeparam name="TElement">
            The type of the elements in the query.
            </typeparam>
            <param name="context">
            The query context.
            </param>
            <param name="query">
            A composed query.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a query result.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.IQueryExecutor.ExecuteExpressionAsync``1(Microsoft.Restier.Core.Query.QueryContext,System.Linq.IQueryProvider,System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes a singleton
            query and produces a query result.
            </summary>
            <typeparam name="TResult">
            The type of the singleton query result.
            </typeparam>
            <param name="context">
            The query context.
            </param>
            <param name="queryProvider">
            A query provider to execute the expression.
            </param>
            <param name="expression">
            An expression to be composed on the base query.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a query result.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.DefaultQueryExecutor.ExecuteQueryAsync``1(Microsoft.Restier.Core.Query.QueryContext,System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.DefaultQueryExecutor.ExecuteExpressionAsync``1(Microsoft.Restier.Core.Query.QueryContext,System.Linq.IQueryProvider,System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.DefaultQueryHandler">
            <summary>
            Represents the default query handler.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.DefaultQueryHandler.QueryAsync(Microsoft.Restier.Core.Query.QueryContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the query flow.
            </summary>
            <param name="context">
            The query context.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a query result.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.IQueryExpressionExpander">
            <summary>
            Represents a service that expands a query expression.
            </summary>
            <remarks>
            <para>
            Query expression expansion converts an expression that represents
            normalized API data into an expression using more primitive nodes.
            </para>
            <para>
            Expansion is the second step that occurs when processing a query
            expression after its children have been visited, so it occurs during
            upward traversal of the query expression and after inspection. Since
            expansion fundamentally alters the query expression, the resulting
            expression is recursively processed to ensure that all appropriate
            normalization, inspection, expansion, filtering and sourcing occurs.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.IQueryExpressionExpander.Expand(Microsoft.Restier.Core.Query.QueryExpressionContext)">
            <summary>
            Expands an expression.
            </summary>
            <param name="context">
            The query expression context.
            </param>
            <returns>
            An expanded expression of the same type as the visited node, or
            if expansion did not apply, the visited node or <c>null</c>.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.IQueryExpressionAuthorizer">
            <summary>
            Represents a service that inspects a query expression.
            </summary>
            <remarks>
            <para>
            Query expression inspection evaluates an expression to determine
            if it is valid according to API logic such as authorization rules.
            </para>
            <para>
            Inspection is the first step that occurs when processing a query
            expression after its children have been visited, so it occurs during
            upward traversal of the query expression. This ensures that inspection
            has a chance to take place before the node is altered in any way (with
            the exception of normalization of expressions identifying API data).
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.IQueryExpressionAuthorizer.Authorize(Microsoft.Restier.Core.Query.QueryExpressionContext)">
            <summary>
            Check an expression to see whether it is authorized.
            </summary>
            <param name="context">
            The query expression context.
            </param>
            <returns>
            <c>true</c> if the inspection passed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.IQueryExpressionSourcer">
            <summary>
            Represents a service that replace queryable source of an expression.
            </summary>
            <remarks>
            <para>
            Query expression sourcing converts an expression that identifies
            API data in a normalized manner to an equivalent representation
            in terms of the underlying data source proxy.
            </para>
            <para>
            Sourcing is the last step that occurs when processing a query
            expression, and only happens on expressions that represent API
            data that cannot be expanded into any more primitive of an expression.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.IQueryExpressionSourcer.ReplaceQueryableSource(Microsoft.Restier.Core.Query.QueryExpressionContext,System.Boolean)">
            <summary>
            Replace queryable source of an expression.
            </summary>
            <param name="context">
            The query expression context.
            </param>
            <param name="embedded">
            Indicates if the sourcing is occurring on an embedded node.
            </param>
            <returns>
            A data source expression that represents the visited node.
            </returns>
            <remarks>
            <para>
            When <paramref name="embedded"/> is <c>false</c>, this method
            should produce a constant expression whose value is a queryable
            object produced by calling into the underlying data source proxy.
            </para>
            <para>
            When <paramref name="embedded"/> is <c>true</c>, this method should
            return an expression that represents the API data identified by
            the visited node in terms of the underlying data source proxy.
            </para>
            <para>
            Consider an example where the data source API has a method to get
            a query over customers, accessed through "data.GetCustomers()".
            When <paramref name="embedded"/> is false, this method should call
            that method and return a constant expression containing the query.
            When <paramref name="embedded"/> is true, this method should build
            a call expression to "GetCustomers" where the object to which it
            applies is a constant expression whose value is the data object.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.QueryContext">
            <summary>
            Represents context under which a query flow operates.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryContext.#ctor(Microsoft.Restier.Core.ApiContext,Microsoft.Restier.Core.Query.QueryRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Query.QueryContext"/> class.
            </summary>
            <param name="apiContext">
            An API context.
            </param>
            <param name="request">
            A query request.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryContext.Model">
            <summary>
            Gets the model that informs this query context.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryContext.Request">
            <summary>
            Gets the query request.
            </summary>
            <remarks>
            The query request cannot be set if there is already a result.
            </remarks>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.QueryExpressionContext">
            <summary>
            Represents context for a query expression that
            is used during query expression processing.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryExpressionContext.#ctor(Microsoft.Restier.Core.Query.QueryContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Query.QueryExpressionContext"/> class.
            </summary>
            <param name="queryContext">
            A query context.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryExpressionContext.PushVisitedNode(System.Linq.Expressions.Expression)">
            <summary>
            Pushes a visited node.
            </summary>
            <param name="visitedNode">
            A visited node.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryExpressionContext.ReplaceVisitedNode(System.Linq.Expressions.Expression)">
            <summary>
            Replaces the visited node.
            </summary>
            <param name="visitedNode">
            A new visited node.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryExpressionContext.PopVisitedNode">
            <summary>
            Pops a visited node.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryExpressionContext.GetModelReferenceForNode(System.Linq.Expressions.Expression)">
            <summary>
            Gets a reference to the model element
            that represents an expression node.
            </summary>
            <param name="node">
            An expression node.
            </param>
            <returns>
            A reference to the model element
            that represents the expression node.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryExpressionContext.ComputeQueryModelReference(System.Linq.Expressions.MethodCallExpression,Microsoft.Restier.Core.Query.QueryModelReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            This method is called by method call like Where/OfType/SelectMany and so on
            to create a model reference for whole function call.
            </summary>
            <param name="methodCall">
            An method call expression node.
            </param>
            <param name="source">
            The parameter model reference.
            </param>
            <param name="model">
            The edm model.
            </param>
            <returns>
            A reference to the model element
            that represents the expression node.
            </returns>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryExpressionContext.QueryContext">
            <summary>
            Gets the query context associated with this context.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryExpressionContext.VisitedNode">
            <summary>
            Gets the expression node that is being visited.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryExpressionContext.ModelReference">
            <summary>
            Gets a reference to the model element
            that represents the visited node.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryExpressionContext.AfterNestedVisitCallback">
            <summary>
            Gets or sets an action that is invoked after an
            expanded or filtered expression has been visited.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.QueryModelReference">
            <summary>
            Represents a reference to query data in terms of a model.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryModelReference.EntitySet">
            <summary>
            Gets the entity set that ultimately contains the data.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryModelReference.Type">
            <summary>
            Gets the type of the data, if any.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.DataSourceStubModelReference">
            <summary>
            Represents a reference to data source stub in terms of a model.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.DataSourceStubModelReference.#ctor(Microsoft.Restier.Core.Query.QueryContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Query.DataSourceStubModelReference"/> class.
            </summary>
            <param name="context">
            A query context.
            </param>
            <param name="name">
            The name of an entity set, singleton or function import.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.DataSourceStubModelReference.#ctor(Microsoft.Restier.Core.Query.QueryContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Query.DataSourceStubModelReference"/> class referring to a function.
            </summary>
            <param name="context">
            A query context.
            </param>
            <param name="namespaceName">
            The name of a namespace containing the function.
            </param>
            <param name="name">
            The name of a function.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.DataSourceStubModelReference.EntitySet">
            <summary>
            Gets the entity set that ultimately contains the data.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.DataSourceStubModelReference.Type">
            <summary>
            Gets the type of the data, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.DataSourceStubModelReference.Element">
            <summary>
            Gets the element representing the API data.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.ParameterModelReference">
            <summary>
            Represents a reference to parameter data in terms of a model.
            It does not have special logic
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.PropertyModelReference">
            <summary>
            Represents a reference to property data in terms of a model.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.PropertyModelReference.#ctor(System.String,Microsoft.OData.Edm.IEdmProperty,Microsoft.Restier.Core.Query.QueryModelReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Query.PropertyModelReference"/> class.
            </summary>
            <param name="propertyName">
            The name of a property.
            </param>
            <param name="property">
            EDM property instance
            </param>
            <param name="source">
            A source query model reference.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.PropertyModelReference.#ctor(Microsoft.Restier.Core.Query.QueryModelReference,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Query.PropertyModelReference"/> class.
            </summary>
            <param name="source">
            A source query model reference.
            </param>
            <param name="propertyName">
            The name of a property.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.PropertyModelReference.Source">
            <summary>
            Gets the source of the derived data.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.PropertyModelReference.EntitySet">
            <summary>
            Gets the entity set that contains the data.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.PropertyModelReference.Type">
            <summary>
            Gets the type of the queryable data.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.PropertyModelReference.Property">
            <summary>
            Gets the property representing the property data.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.QueryRequest">
            <summary>
            Represents a query request.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryRequest.#ctor(System.Linq.IQueryable)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Query.QueryRequest"/> class with a composed query.
            </summary>
            <param name="query">
            A composed query that was derived from a queryable source.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryRequest.Expression">
            <summary>
            Gets or sets the composed query expression.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryRequest.ShouldReturnCount">
            <summary>
            Gets or sets a value indicating whether the number
            of the items should be returned instead of the
            items themselves.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Query.QueryResult">
            <summary>
            Represents a query result.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryResult.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Query.QueryResult"/> class with an Exception.
            </summary>
            <param name="exception">
            An Exception.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.Query.QueryResult.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Query.QueryResult"/> class with in-memory results.
            </summary>
            <param name="results">
            In-memory results.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryResult.Exception">
            <summary>
            Gets or sets an Exception to be returned.
            </summary>
            <remarks>
            Setting this value will override any existing Exception or results.
            </remarks>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryResult.ResultsSource">
            <summary>
            Gets or sets the entity set from which the results were sourced.
            </summary>
            <remarks>
            This property will be <c>null</c> if the results are not instances
            of a particular entity type that has an associated entity set.
            </remarks>
        </member>
        <member name="P:Microsoft.Restier.Core.Query.QueryResult.Results">
            <summary>
            Gets or sets the in-memory results.
            </summary>
            <remarks>
            Setting this value will override any existing Exception or results.
            </remarks>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.ChangeSet">
            <summary>
            Represents a change set.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.ChangeSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Submit.ChangeSet"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.ChangeSet.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Restier.Core.Submit.ChangeSetItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Submit.ChangeSet"/> class.
            </summary>
            <param name="entries">
            A set of change set entries.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.ChangeSet.Entries">
            <summary>
            Gets the entries in this change set.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.DataModificationItemAction">
            <summary>
            This enum controls the actions requested for an resource.
            </summary>
            <remarks>
            This is required because during the post-CUD events, the resource state has been lost.
            This enum allows the API to remember which pre-CUD event was raised for the Resource.
            </remarks>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.DataModificationItemAction.Undefined">
            <summary>
            Specifies an undefined action.
            </summary>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.DataModificationItemAction.Update">
            <summary>
            Specifies the resource is being updated.
            </summary>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.DataModificationItemAction.Insert">
            <summary>
            Specifies the resource is being inserted.
            </summary>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.DataModificationItemAction.Remove">
            <summary>
            Specifies the resource is being removed.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.ChangeSetItemType">
            <summary>
            Specifies the type of a change set item.
            </summary>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.ChangeSetItemType.DataModification">
            <summary>
            Specifies a data modification item.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.ChangeSetItemProcessingStage">
            <summary>
            Possible states of an resource during a ChangeSet life cycle
            </summary>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.ChangeSetItemProcessingStage.Initialized">
            <summary>
            If an new change set item is created
            </summary>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.ChangeSetItemProcessingStage.Validated">
            <summary>
            The resource has been validated.
            </summary>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.ChangeSetItemProcessingStage.PreEventing">
            <summary>
            The resource set deleting, inserting or updating events are raised
            </summary>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.ChangeSetItemProcessingStage.ChangedWithinOwnPreEventing">
            <summary>
            The resource was modified within its own pre eventing interception method. This indicates that the resource
            should be revalidated but its pre eventing interception point should not be invoked again.
            </summary>
        </member>
        <member name="F:Microsoft.Restier.Core.Submit.ChangeSetItemProcessingStage.PreEvented">
            <summary>
            The resource's pre events have been raised
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.ChangeSetItem">
            <summary>
            Represents an item in a change set.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.ChangeSetItem.HasChanged">
            <summary>
            Indicates whether this change set item is in a changed state.
            </summary>
            <returns>
            Whether this change set item is in a changed state.
            </returns>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.ChangeSetItem.Type">
            <summary>
            Gets the type of this change set item.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.ChangeSetItem.ChangeSetItemProcessingStage">
            <summary>
            Gets or sets the dynamic state of this change set item.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.DataModificationItem">
            <summary>
            Represents a data modification item in a change set.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.DataModificationItem.#ctor(System.String,System.Type,System.Type,Microsoft.Restier.Core.Submit.DataModificationItemAction,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Submit.DataModificationItem"/> class.
            </summary>
            <param name="resourceSetName">
            The name of the resource set in question.
            </param>
            <param name="expectedResourceType">
            The type of the expected resource type in question.
            </param>
            <param name="actualResourceType">
            The type of the actual resource type in question.
            </param>
            <param name="action">
            The DataModificationItemAction for the request.
            </param>
            <param name="resourceKey">
            The key of the resource being modified.
            </param>
            <param name="originalValues">
            Any original values of the resource that are known.
            </param>
            <param name="localValues">
            The local values of the resource.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.DataModificationItem.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Applies the current DataModificationItem's KeyValues and OriginalValues to the
            specified query and returns the new query.
            </summary>
            <param name="query">The IQueryable to apply the property values to.</param>
            <returns>
            The new IQueryable with the property values applied to it in a Where condition.
            </returns>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.DataModificationItem.ValidateEtag(System.Linq.IQueryable)">
            <summary>
            Validate the e-tag via applies the current DataModificationItem's OriginalValues to the
            specified query and returns result.
            </summary>
            <param name="query">The IQueryable to apply the property values to.</param>
            <returns>
            The object is e-tag checked passed.
            </returns>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.ResourceSetName">
            <summary>
            Gets the name of the resource set in question.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.ExpectedResourceType">
            <summary>
            Gets the name of the expected resource type in question.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.ActualResourceType">
            <summary>
            Gets the name of the actual resource type in question.
            In type inheritance case, this is different from expectedResourceType
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.ResourceKey">
            <summary>
            Gets the key of the resource being modified.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.DataModificationItemAction">
            <summary>
            Gets or sets the action to be taken.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.IsFullReplaceUpdateRequest">
            <summary>
            Gets or sets a value indicating whether the resource should be fully replaced by the modification.
            </summary>
            <remarks>
            If true, all properties will be updated, even if the property isn't in LocalValues.
            If false, only properties identified in LocalValues will be updated on the resource.
            </remarks>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.Resource">
            <summary>
            Gets or sets the resource object in question.
            </summary>
            <remarks>
            Initially this will be <c>null</c>, however after the change
            set has been prepared it will represent the pending resource.
            </remarks>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.OriginalValues">
            <summary>
            Gets the original values for properties that have changed.
            </summary>
            <remarks>
            For new entities, this property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.ServerValues">
            <summary>
            Gets the current server values for properties that have changed.
            </summary>
            <remarks>
            For new entities, this property is <c>null</c>. For updated
            entities, it is <c>null</c> until the change set is prepared.
            </remarks>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem.LocalValues">
            <summary>
            Gets the local values for properties that have changed.
            </summary>
            <remarks>
            For entities pending deletion, this property is <c>null</c>.
            </remarks>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.DataModificationItem`1">
            <summary>
            Represents a data modification item in a change set.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.DataModificationItem`1.#ctor(System.String,System.Type,System.Type,Microsoft.Restier.Core.Submit.DataModificationItemAction,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Submit.DataModificationItem`1"/> class.
            </summary>
            <param name="resourceSetName">
            The name of the resource set in question.
            </param>
            <param name="expectedResourceType">
            The type of the expected resource type in question.
            </param>
            <param name="actualResourceType">
            The type of the actual resource type in question.
            </param>
            <param name="action">
            The DataModificationItemAction for the request.
            </param>
            <param name="resourceKey">
            The key of the resource being modified.
            </param>
            <param name="originalValues">
            Any original values of the resource that are known.
            </param>
            <param name="localValues">
            The local values of the entity.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.DataModificationItem`1.Resource">
            <summary>
            Gets or sets the resource object in question.
            </summary>
            <remarks>
            Initially this will be <c>null</c>, however after the change
            set has been prepared it will represent the pending resource.
            </remarks>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.DefaultSubmitHandler">
            <summary>
            Represents the default submit handler.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.DefaultSubmitHandler.SubmitAsync(Microsoft.Restier.Core.Submit.SubmitContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes the submit flow.
            </summary>
            <param name="context">
            The submit context.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a submit result.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.IChangeSetInitializer">
            <summary>
            Represents a service that can initialize a change set.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.IChangeSetInitializer.InitializeAsync(Microsoft.Restier.Core.Submit.SubmitContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously initialize a change set for submission.
            </summary>
            <param name="context">
            The submit context.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous operation.
            </returns>
            <remarks>
            Preparing a change set involves creating new entity objects for
            new data, loading entities that are pending update or delete from
            to get current server values, and using a data provider mechanism
            to locally apply the supplied changes to the loaded entities.
            </remarks>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.ISubmitExecutor">
            <summary>
            Represents a service that executes a submission.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.ISubmitExecutor.ExecuteSubmitAsync(Microsoft.Restier.Core.Submit.SubmitContext,System.Threading.CancellationToken)">
            <summary>
            Asynchronously executes a submission and produces a submit result.
            </summary>
            <param name="context">
            The submit context.
            </param>
            <param name="cancellationToken">
            A cancellation token.
            </param>
            <returns>
            A task that represents the asynchronous
            operation whose result is a submit result.
            </returns>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.SubmitContext">
            <summary>
            Represents context under which a submit flow operates.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.SubmitContext.#ctor(Microsoft.Restier.Core.ApiContext,Microsoft.Restier.Core.Submit.ChangeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Submit.SubmitContext"/> class.
            </summary>
            <param name="apiContext">
            An API context.
            </param>
            <param name="changeSet">
            A change set.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.SubmitContext.Model">
            <summary>
            Gets the model that informs this submit context.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.SubmitContext.ChangeSet">
            <summary>
            Gets or sets the change set.
            </summary>
            <remarks>
            The change set cannot be set if there is already a result.
            </remarks>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.SubmitContext.Result">
            <summary>
            Gets or sets the submit result.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.SubmitResult">
            <summary>
            Represents a submit result.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.SubmitResult.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Submit.SubmitResult"/> class with an error.
            </summary>
            <param name="exception">
            An error.
            </param>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.SubmitResult.#ctor(Microsoft.Restier.Core.Submit.ChangeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Submit.SubmitResult"/> class
            </summary>
            <param name="completedChangeSet">
            A completed change set.
            </param>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.SubmitResult.Exception">
            <summary>
            Gets or sets an error to be returned.
            </summary>
            <remarks>
            Setting this value will override any
            existing error or completed change set.
            </remarks>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.SubmitResult.CompletedChangeSet">
            <summary>
            Gets or sets the completed change set.
            </summary>
            <remarks>
            Setting this value will override any
            existing error or completed change set.
            </remarks>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.ChangeSetValidationException">
            <summary>
            Represents an exception that indicates validation errors occurred on entities.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.ChangeSetValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Submit.ChangeSetValidationException"/> class.
            </summary>
            <param name="message">Message of the exception.</param>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.ChangeSetValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Restier.Core.Submit.ChangeSetValidationException"/> class.
            </summary>
            <param name="message">Message of the exception.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.ChangeSetValidationException.ValidationResults">
            <summary>
            Gets or sets the failed validation results.
            </summary>
        </member>
        <member name="T:Microsoft.Restier.Core.Submit.ChangeSetItemValidationResult">
            <summary>
            Represents a single result when validating an entity, property, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Restier.Core.Submit.ChangeSetItemValidationResult.ToString">
            <summary>
            Returns the string that represents this validation result.
            </summary>
            <returns>
            The string that represents this validation result.
            </returns>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.ChangeSetItemValidationResult.Id">
            <summary>
            Gets or sets the identifier for this validation result.
            </summary>
            <remarks>
            Id allows programmatic matching of validation results between tiers.
            </remarks>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.ChangeSetItemValidationResult.Target">
            <summary>
            Gets or sets the item to which the validation result applies.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.ChangeSetItemValidationResult.PropertyName">
            <summary>
            Gets or sets the name of the property to which the validation result applies.
            If null, the validation result applies to the whole Target.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.ChangeSetItemValidationResult.Severity">
            <summary>
            Gets or sets the severity of this validation result.
            </summary>
        </member>
        <member name="P:Microsoft.Restier.Core.Submit.ChangeSetItemValidationResult.Message">
            <summary>
            Gets or sets the message to be displayed to the end user for this validation result.
            </summary>
        </member>
    </members>
</doc>
